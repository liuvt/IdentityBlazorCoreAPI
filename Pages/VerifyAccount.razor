@page "/verify-account"
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<PageTitle>Xác thực thông tin người dùng - AugCenter</PageTitle>

<MudMainContent Class="augBackground augBody">
    <MudContainer MaxWidth="MaxWidth.Large" Class="augImg mt-5">
        <MudGrid>
            <MudItem sm="12" md="8">
                <MudItem>
                    <MudText Typo="Typo.h3" Color="Color.Primary">Xác thực thông tin người dùng</MudText>
                </MudItem>
                <MudItem>
                    <AuthorizeView>
                            <Authorized>
                                <MudText Typo="Typo.h5" Class="mt-3">Xin chào, @name!</MudText>
                                <MudText Class="mt-3">Email: @email</MudText>
                            </Authorized>
                            <NotAuthorized>
                                <a href="/register">Register</a>
                                <a href="/login">Log in</a>
                            </NotAuthorized>
                        </AuthorizeView>
                </MudItem>
            </MudItem>
            <!-- Image ảnh-->
            <MudItem sm="12" md="4">
                <img width="100%" height="100%" src="imgs/photos/register1.jpg" />
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudMainContent>
@code{
    string name;
    string email;
    protected async override Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        if(authstate!= null)
        {
            var user = authstate.User;
            if(user != null)
            {
                name = user.Claims.Where(c => c.Type == "name").FirstOrDefault().Value;
                email = user.Claims.Where(c => c.Type == "email").FirstOrDefault().Value;
            }
        }
    }
}